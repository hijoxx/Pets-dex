{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hijoxx\\\\WebstormProjects\\\\react-pokemon-app\\\\src\\\\components\\\\chat-card.tsx\";\nimport React, { useState } from \"react\";\nimport \"./chat-card.css\";\nimport \"../helpers/format-date\";\n\nconst ChatCard = ({\n  chat,\n  borderColor = '#009688'\n}) => {\n  const [color, setColor] = useState();\n\n  const showborder = () => {\n    setColor(borderColor);\n  };\n\n  const hideBorder = () => {\n    setColor('#F5F5F5');\n  };\n\n  const formatType = type => {\n    let color;\n\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n\n      default:\n        color = 'grey';\n        break;\n    }\n\n    return `chip ${color}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showborder,\n    onMouseLeave: hideBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card horizontal\",\n    style: {\n      borderColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: chat.picture,\n    alt: chat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, chat.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }\n  }, formatDate(chat.created))), chat.types.map(type => /*#__PURE__*/React.createElement(\"span\", {\n    key: type,\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \" \", type))))));\n};\n\nexport default ChatCard;","map":{"version":3,"sources":["C:/Users/Hijoxx/WebstormProjects/react-pokemon-app/src/components/chat-card.tsx"],"names":["React","useState","ChatCard","chat","borderColor","color","setColor","showborder","hideBorder","formatType","type","picture","name","formatDate","created","types","map"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useState} from \"react\";\r\nimport Chat from \"../models/Chat\";\r\nimport \"./chat-card.css\";\r\nimport \"../helpers/format-date\"\r\n\r\ntype Props = {\r\n    chat: Chat\r\n    borderColor?: string\r\n};\r\n\r\nconst ChatCard: FunctionComponent<Props> = ({chat, borderColor = '#009688'}) => {\r\n    const [color, setColor] = useState<string>();\r\n\r\n    const showborder = () => {\r\n        setColor(borderColor);\r\n    }\r\n    const hideBorder = () => {\r\n        setColor('#F5F5F5');\r\n    }\r\n\r\n\r\n    const formatType = (type: string): string => {\r\n        let color: string;\r\n\r\n        switch (type) {\r\n            case 'Feu':\r\n                color = 'red lighten-1';\r\n                break;\r\n            case 'Eau':\r\n                color = 'blue lighten-1';\r\n                break;\r\n            case 'Plante':\r\n                color = 'green lighten-1';\r\n                break;\r\n            case 'Insecte':\r\n                color = 'brown lighten-1';\r\n                break;\r\n            case 'Normal':\r\n                color = 'grey lighten-3';\r\n                break;\r\n            case 'Vol':\r\n                color = 'blue lighten-3';\r\n                break;\r\n            case 'Poison':\r\n                color = 'deep-purple accent-1';\r\n                break;\r\n            case 'Fée':\r\n                color = 'pink lighten-4';\r\n                break;\r\n            case 'Psy':\r\n                color = 'deep-purple darken-2';\r\n                break;\r\n            case 'Electrik':\r\n                color = 'lime accent-1';\r\n                break;\r\n            case 'Combat':\r\n                color = 'deep-orange';\r\n                break;\r\n            default:\r\n                color = 'grey';\r\n                break;\r\n        }\r\n\r\n        return `chip ${color}`;\r\n    }\r\n    return (\r\n        <div className=\"col s6 m4\" onMouseEnter={showborder} onMouseLeave={hideBorder}>\r\n            <div className=\"card horizontal\" style={{borderColor: color}}>\r\n                <div className=\"card-image\">\r\n                    <img src={chat.picture} alt={chat.name}/>\r\n                </div>\r\n                <div className=\"card-stacked\">\r\n                    <div className=\"card-content\">\r\n                        <p>{chat.name}</p>\r\n                        <p><small>{formatDate(chat.created)}</small></p>\r\n\r\n                        {chat.types.map(type => (\r\n                                <span key={type} className={formatType(type)}> {type}</span>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatCard;"]},"metadata":{},"sourceType":"module"}